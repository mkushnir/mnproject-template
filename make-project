#!/bin/sh

usage() {
    echo "`basename $0` [ -t {prog|lib} ] [ -v VERSIONINFO ] [ -n ] [ -f ] project-name"
    echo "`basename $0` -h"
}

type=prog
_PTYPE=PROG
_OWN=BINOWN
_GRP=BINGRP
_MNAME=main.c
_BSD=prog
_SHLIB=
_VERSIONINFO="-version-info 0:0:0"
force=0
noinit=0

args=`getopt fhnt:v: $*`
if test $? -ne 0
then
    usage
    exit 2
fi
set -- $args
while true
do
    case "$1" in
    -f)
        shift
        force=1
        ;;
    -h)
        usage
        exit
        ;;
    -n)
        shift
        noinit=1
        ;;
    -t)
        shift
        type="$1"
        shift
        ;;
    -v)
        shift
        _VERSIONINFO="-version-info $1"
        shift
        ;;
    --)
        shift
        break
        ;;
    esac
done

pname="$1"
if test "$pname" = ""
then
    echo "no project ...";
    exit 1;
fi

if test -d "$pname" -a $force -eq 0
then
    echo "duplicate project ..."
    exit 1
fi

echo "Creating project $pname ..."

if ! test -d "$pname"
then
    mkdir "$pname"
fi

( cd $pname && tar -cvz -f- -C ../default-project . | tar -xvz -f- )

#cp -R default-project "$pname";

if test "$type" = "lib"
then
    _PTYPE=LIB
    _OWN=LIBOWN
    _GRP=LIBGRP
    _MNAME=$pname.c
    _BSD=lib
    _SHLIB="SHLIB_NAME=lib${pname}.so"
    canonical_pname="lib${pname}.la"
    _AM_PROG="lib_LTLIBRARIES = lib${pname}.la"
    _LIB_HEADERS="nobase_include_HEADERS = $pname.h"
    _TEST_LIB_HEADERS="noinst_HEADERS = ../$pname.h"
    _TESTFOO_LDFLAGS="-l$pname"
    rm "$pname/src/main.c"
    touch $pname/src/$pname.c $pname/src/$pname.h $pname/src/${pname}_private.h
    for i in $pname/src/$pname.h $pname/src/${pname}_private.h
    do
        n=`basename $i`
        nn=`echo $n | sed 'y/abcdefghijklnmopqrstuvwxyz.-/ABCDEFGHIJKLNMOPQRSTUVWXYZ__/'`
        cat <<EOD >$i
#ifndef ${nn}_DEFINED
#define ${nn}_DEFINED

#ifdef __cplusplus
extern "C" {
#endif



#ifdef __cplusplus
}
#endif
#endif /* ${nn}_DEFINED */
EOD
    done
else
    canonical_pname=$pname
    _AM_PROG="bin_PROGRAMS = $pname"
    _LIB_HEADERS="nobase_include_HEADERS ="
    _TEST_LIB_HEADERS="noinst_HEADERS ="
fi

canonical_pname=`echo $canonical_pname | sed -e 's/[^a-zA-Z0-9_]/_/g'`

echo "Writing Makefile's for $pname ..."

cat << EOD > $pname/src/Makefile.freebsd
# Created by `basename $0`
$_PTYPE=$pname
$_SHLIB

$_OWN=\$(USER)
$_GRP=\$(USER)

DESTDIR=\$(HOME)
BINDIR=/bin
LIBDIR=/lib
LIBCOMPATDIR=/lib/compat
LIBDATADIR=/libdata
LINTLIBDIR=/libdata/lint
SHAREDIR=/share
INCLUDEDIR=/include
# re-write bsd.libnames.mk
LIBOBJC=/usr/lib/libobjc.a
LIBC=/usr/lib/libc.a

NO_MAN=
CSTD=c99
CFLAGS+= -Wall -Wextra -Werror  -g

.ifdef SHARED
CFLAGS+= -shared
.endif

SRCS=	diag.c $_MNAME foo.c

SUBDIR=test

.ifndef USE_GCC
CC=clang -Qunused-arguments -fcolor-diagnostics
CXX=clang++
CPP=clang-cpp
.endif

diag.c diag.h: diag.txt
	sh ./gen-diag

.include <bsd.$_BSD.mk>

shared:
	\${MAKE} -DSHARED

run: all
	LD_LIBRARY_PATH=\$(HOME)/lib ./\${PROG}

testrun:
.for i in \$(SUBDIR)
	cd \$(i) && \$(MAKE) testrun
.endfor

EOD

cat <<EOD >$pname/configure.ac
AC_INIT($pname, 0.1, markiyan.kushnir@gmail.com)
if test -n "\$USE_GCC"
then
    if test "\$USE_GCC" = "46" && which gcc46
    then
        CC="gcc46"
        CXX="c++46"
        CPP="cpp"
    else
        if which gcc
        then
            CC="gcc"
            CXX="g++"
            CPP="cpp"
        else
            echo "Cannot find gcc"
            exit 1
        fi
    fi
else
    if which clang >/dev/null
    then
        CC="clang -Qunused-arguments -fcolor-diagnostics"
        CXX="clang++ -Qunused-arguments -fcolor-diagnostics"
        CPP="clang-cpp"
        clang_version=\`clang --version | grep version | awk '{print \$4;}'\`
        clang_version_mjr=\`echo \$clang_version | awk -F. '{print \$1;}'\`
        clang_version_mnr=\`echo \$clang_version | awk -F. '{print \$2;}'\`
        if test "\$clang_version_mjr" = "3" -a "\$clang_version_mnr" -lt 3
        then
            AC_SUBST(CLANG_DEBUG, ['-ftrapv -fcatch-undefined-behavior'])
        else
            # we assume all others are 3.3+
            AC_SUBST(CLANG_DEBUG, ['-fsanitize=undefined-trap -fsanitize-undefined-trap-on-error'])
        fi
    else
        CC="cc"
        CXX="c++"
        CPP="cpp"
    fi
fi

AC_CONFIG_MACRO_DIR([m4])

#AC_LANG(C)

AC_PROG_CC
AC_PROG_CXX
AM_PROG_AR
AC_PROG_RANLIB
AC_PROG_INSTALL

LT_INIT
AM_INIT_AUTOMAKE

dnl AM_MAINTAINER_MODE

AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile man/Makefile])
AC_CONFIG_HEADERS(config.h)

AC_CHECK_HEADERS([syslog.h])

AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

AC_FUNC_MALLOC
AC_FUNC_REALLOC

AC_PRESERVE_HELP_ORDER

AC_ARG_ENABLE(debug,
              AC_HELP_STRING([--enable-debug],
                             [Enable debug build (default=no)]),
              [AM_CONDITIONAL([DEBUG], [enable_debug=yes])],
              [AM_CONDITIONAL([DEBUG], [test "\$enable_debug" = "yes"])])

# pass LDFLAGS=-L\${LOCALBASE}/lib in the environment
AC_CHECK_LIB(mrkcommon, _fini, [], [AC_MSG_FAILURE(libmrkcommon.so is required. Please find it at git@github.com:mkushnir/mrkcommon.git)])

AC_OUTPUT
EOD

cat <<EOD >$pname/Makefile.am
distdir = \$(PACKAGE)-\$(VERSION)
SUBDIRS = src man
#CLEANFILES = *.in *.m4 *.log *.scan configure

run:
	for i in \$(SUBDIRS); do if test "\$\$i" != "."; then cd \$\$i && \$(MAKE) run && cd ..; fi; done;

testrun:
	for i in \$(SUBDIRS); do if test "\$\$i" != "."; then cd \$\$i && \$(MAKE) testrun && cd ..; fi; done;
EOD

cat <<EOD >$pname/src/Makefile.am
AUTOMAKE_OPTIONS = foreign

distdir = ../\$(PACKAGE)-\$(VERSION)/src
dist_HEADERS =

BUILT_SOURCES = diag.c diag.h
EXTRA_DIST = diag.txt gen-diag
CLEANFILES = \$(BUILT_SOURCES) *.core
#CLEANFILES += *.in

${_AM_PROG}

${_LIB_HEADERS}

noinst_HEADERS =

${canonical_pname}_SOURCES = foo.c $_MNAME
nodist_${canonical_pname}_SOURCES = diag.c

if DEBUG
    DEBUG_FLAGS = -g -O0 @CLANG_DEBUG@
else
DEBUG_FLAGS = -DNDEBUG -O3
endif

${canonical_pname}_CFLAGS = \$(DEBUG_FLAGS) -Wall -Wextra -Werror -std=c99 -I\$(includedir)

${canonical_pname}_LDFLAGS = ${_VERSIONINFO} -L\$(libdir) -lmrkcommon

SUBDIRS = . test

diag.c diag.h: diag.txt
	sh ./gen-diag

run: all
	for i in \$(bin_PROGRAMS); do if test -x ./\$\$i; then LD_LIBRARY_PATH=\$(libdir) ./\$\$i; fi; done;

testrun:
	for i in \$(SUBDIRS); do if test "\$\$i" != "."; then cd \$\$i && \$(MAKE) testrun && cd ..; fi; done;
EOD

cat <<EOD >$pname/src/test/Makefile.am
AUTOMAKE_OPTIONS = foreign
CLEANFILES = *.core
#CLEANFILES += *.in

noinst_PROGRAMS=testfoo

distdir = ../../\$(PACKAGE)-\$(VERSION)/src/test
dist_HEADERS = unittest.h

BUILT_SOURCES = ../diag.c ../diag.h

${_TEST_LIB_HEADERS}

if DEBUG
    DEBUG_FLAGS = -g -O0 @CLANG_DEBUG@
else
DEBUG_FLAGS = -DNDEBUG -O3
endif

nodist_testfoo_SOURCES = ../diag.c
testfoo_SOURCES = testfoo.c
testfoo_CFLAGS = \$(DEBUG_FLAGS) -Wall -Wextra -Werror -std=c99 -I.. -I\$(includedir)
testfoo_LDFLAGS = -L\$(libdir) -lmrkcommon ${_TESTFOO_LDFLAGS}

../diag.c ../diag.h: ../diag.txt
	sh ../gen-diag

testrun: all
	for i in \$(noinst_PROGRAMS); do if test -x ./\$\$i; then LD_LIBRARY_PATH=\$(libdir) ./\$\$i; fi; done;
EOD

cat <<EOD >$pname/COPYING
# \$Id:$

The compilation of software known as "$pname" is distributed under the
following terms:

Copyright (c) `date '+%Y'` `pw  usershow \`id -un\` | awk -F: '{print $8;}'`. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
1. Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS \`\`AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.

EOD

echo "Initial run of autotools ..."
cd $pname

set -x

if test $noinit -eq 0
then
    aclocal
    autoheader
    #autoreconf
    automake --add-missing
    libtoolize
    autoreconf
fi

echo "Project $pname created -- OK";

exit 0;



