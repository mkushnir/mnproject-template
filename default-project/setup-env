#!/bin/sh

# On FreeBSD:
#   pkg install autotools
#
# On Linux:
#   apt-get update
#   apt-get install autotools-dev autoconf libtool
#   or apt-get install build-essential
#
#   yum install epel-release
#   yum group install "Development Tools"
#   yum install openssl-devel zlib-devel libev-devel
#
# Git setup:
#   git init
#   git add \
#     .gitignore \
#     AUTHORS \
#     COPYING \
#     ChangeLog \
#     Makefile.am \
#     NEWS \
#     README \
#     configure.ac \
#     man/Makefile.am \
#     setup-env \
#     src/${pname}.c \
#     src/${pname}.h \
#     src/${pname}_private.h \
#     src/Makefile.am \
#     src/diag.txt \
#     test/Makefile.am \
#     test/diag.txt \
#     test/gendata.c \
#     test/runscripts \
#     test/testbar.c \
#     test/testfoo.c \
#     test/unittest.h


die() {
    echo $*
    exit 1
}


do_pre() {
    #git submodule update
}


do_init() {
    autoreconf --force
    if test $? -ne 0
    then
        if test -e .ac-aux/missing
        then
            die fix your errors
        fi
    fi
    aclocal
    autoheader
    autoreconf
    automake --add-missing
    libtoolize
    make distclean
    autoreconf
    ./configure --prefix=$HOME --enable-debug
}


do_dev() {
    autoreconf --force || die fix your errors
    ./configure --prefix=$HOME --enable-debug
}


do_dev_static() {
    autoreconf --force || die fix your errors
    ./configure --prefix=$HOME --enable-debug --enable-allstatic
}


do_dev_ndebug() {
    autoreconf --force || die fix your errors
    ./configure --prefix=$HOME
}


do_dev_ndebug_static() {
    autoreconf --force || die fix your errors
    ./configure --prefix=$HOME --enable-allstatic --enable-lto
}


# This is a sample third party project.
#
# While it makes no harm you can safely remove it.
#
# And you can add any projects that can be integrated using GNU autotools.
#
# In order to do that, you have to keep in sync:
#   - AC_CONFIG_SUBDIRS() macro in this project's configure.ac as well as
#   - SUBDIRS and DIST_SUBDIRS in this project's top level Makefile.am

#tpdirs="third-party/mndiag third-party/mrkcommon third-party/mrkl4c"
#tpdirs="third-party/asd"

dirs=.
R=`pwd -P`

LDFLAGS=
CFLAGS=
for i in $dirs $tpdirs
do
    LDFLAGS="$LDFLAGS -L${R}/$i/src/.libs"
    CFLAGS="$CFLAGS -I${R}/$i/src"
done
LDFLAGS="$LDFLAGS -L$HOME/lib -L/usr/local/lib"
CFLAGS="$CFLAGS -I$HOME/include -I/usr/local/include"
export LDFLAGS
export CFLAGS

if test "$1" = "init"
then
    #git submodule init
    #git submodule update
    for i in $tpdirs $dirs
    do
        ( cd $i && do_init )
    done

elif test "$1" = "dev"
then
    do_pre
    for i in $dirs
    do
        ( cd $i && do_dev )
    done

elif test "$1" = "dev-static"
then
    do_pre
    for i in $dirs
    do
        ( cd $i && do_dev_static )
    done

elif test "$1" = "dev-ndebug"
then
    do_pre
    for i in $dirs
    do
        ( cd $i && do_dev_ndebug )
    done

elif test "$1" = "dev-ndebug-static"
then
    do_pre
    for i in $dirs
    do
        ( cd $i && do_dev_ndebug_static )
    done

elif test "$1" = "dist"
then
    unset LDFLAGS
    unset CFLAGS

    do_pre
    autoreconf --force
    ./configure

    if test -d port
    then
        if test -f port/distinfo
        then
            truncate -s0 port/distinfo
        fi
        if test -d /data2/mkushnir/distfiles
        then
            for i in *.tar.gz
            do
                cp -v $i /data2/mkushnir/distfiles/
                if test -f port/distinfo
                then
                    /sbin/sha256 $i >port/distinfo
                    echo "SIZE ($i) = `stat -f%z $i`" >>port/distinfo
                fi
            done
        fi
    fi

elif test "$1" = "local-dist"
then
    set -e
    localdist=/data0/mkushnir/packages

    ./tools-env/mnversion-bump-build configure.ac
    ./setup-env dist

    (
        rm -f $localdist/mnvmd-*.txz;
        cd port && \
            make clean package && \
            cp work/pkg/mnvmd-*.txz ${localdist}/ && \
            pkg repo ${localdist}/
    )
    echo "Completed build version" `./tools-env/mnversion-get configure.ac`

elif test "$1" = "du"
then
    find . -type f -name '*.[ch]' -ls | awk '{print $7;}' | (n=0; while read a; do n=$((n + a)); done; echo $n)
elif test "$1" = "cscope"
then
    find $R -type f -name '*.[ch]' -and -not -path '*/.build/*' | xargs cscope -b

else
    echo "`basename $0` {init|dev[-static]|[local-]dist|dev-ndebug[-static]|du}"
fi
